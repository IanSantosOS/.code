{
  //|==========================================================================|
  //| VS Code Settings                                                         |
  //|==========================================================================|
  "terminal.integrated.fontFamily": "'FiraCode Nerd Font', 'JetBrainsMono Nerd Font', 'Caskaydia Cove Nerd Font', 'CommitMono Nerd Font', 'Hack Nerd Font', 'MesloLGL Nerd Font', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'FiraCode Nerd Font', 'JetBrainsMono Nerd Font', 'Caskaydia Cove Nerd Font', 'CommitMono Nerd Font', 'Hack Nerd Font', 'MesloLGL Nerd Font', Consolas, 'Courier New', monospace",
  // "terminal.integrated.defaultProfile.windows": "Ubuntu (WSL)", // Always open in WSL (just on windows)
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleReferences": "goto",
  "terminal.integrated.hideOnStartup": "whenEmpty",
  "editor.cursorSmoothCaretAnimation": "explicit",
  "workbench.panel.defaultLocation": "bottom", // "bottom" or "right"
  "workbench.activityBar.location": "default", // "top", "bottom" or "default"
  "workbench.panel.opensMaximized": "always",
  "window.customTitleBarVisibility": "auto",
  "editor.multiCursorModifier": "ctrlCmd",
  "window.newWindowDimensions": "inherit",
  "workbench.editor.showTabs": "multiple",
  "workbench.sideBar.location": "right",
  "window.menuBarVisibility": "toggle", // "hidden", "toggle" or "compact"
  "editor.occurrencesHighlight": "off",
  "editor.renderLineHighlight": "all",
  "editor.lightbulb.enabled": "off",
  "workbench.startupEditor": "none",
  "editor.cursorBlinking": "smooth",
  "window.titleBarStyle": "custom",
  // "editor.lineNumbers": "relative", // it's better when you are using some vim extension
  "files.autoSave": "afterDelay",
  "zenMode.showTabs": "none",
  "editor.linkedEditing": true,
  "editor.fontLigatures": true,
  "explorer.autoReveal": false, // Controls whether the active file is automatically revealed in the Explorer panel.
  "search.useIgnoreFiles": true,
  "explorer.confirmDelete": true, // Confirm Delete
  "editor.minimap.enabled": false,
  "explorer.compactFolders": true, // Compact Folders
  "files.trimFinalNewlines": true,
  "zenMode.hideLineNumbers": false,
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "explorer.fileNesting.enabled": true, // File Nesting
  "explorer.fileNesting.expand": false, // File Nesting
  "explorer.confirmDragAndDrop": false, // Confirm Drag and Drop
  "editor.minimap.renderCharacters": false,
  "extensions.ignoreRecommendations": true,
  "terminal.integrated.enableImages": true,
  "editor.guides.bracketPairsHorizontal": false, // Horizontal Indentation Guides Color Bracket
  "editor.bracketPairColorization.enabled": false,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.tree.enableStickyScroll": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.layoutControl.enabled": false,
  "workbench.editor.enablePreview": false, // Controls whether a file is opened in preview mode (temporary) or as a permanent tab.
  "workbench.editor.limit.enabled": true,
  "workbench.statusBar.visible": false, // Hide the status bar (the bottom bar)
  "workbench.enableExperiments": false,
  "editor.stickyScroll.enabled": false,
  "diffEditor.renderSideBySide": false,
  "editor.overviewRulerBorder": false,
  "workbench.panel.showLabels": false,
  "editor.guides.bracketPairs": false, // Indentation Guides Color Bracket
  "editor.guides.indentation": true, // Indentation Guides
  "editor.detectIndentation": false, // Detect Indentation
  "workbench.tips.enabled": false,
  "window.commandCenter": true,
  "breadcrumbs.enabled": false,
  "editor.formatOnSave": true,
  "editor.scrollbar.verticalScrollbarSize": 12,
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.fontSize": 14,
  "workbench.editor.limit.value": 10,
  "editor.hover.hidingDelay": 450,
  "workbench.tree.indent": 16,
  "editor.padding.top": 20,
  "editor.lineHeight": 1.8,
  "editor.fontSize": 14,
  "window.zoomLevel": 0,
  "editor.rulers": [
    80,
    120
  ],
  "files.associations": {
    ".env*": "dotenv"
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/package-lock.json": true,
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": []
  },
  "explorer.fileNesting.patterns": {
    "package.json": "eslint*, package-lock*, tsconfig*, vite*, prettier*",
    "tailwind.config*": "tailwind.config*, postcss.config*",
    ".env.local": ".env*",
    ".env": ".env*",
  },
  "[css]": {
    "editor.tabSize": 2,
  },
  "[json]": {
    "editor.tabSize": 2,
  },
  "[jsonc]": {
    "editor.tabSize": 2,
  },
  "[jsonl]": {
    "editor.tabSize": 2,
  },
  "workbench.iconTheme": "bearded-icons",
  "workbench.colorTheme": "Omni",
  "symbols.hidesExplorerArrows": true,
  "catppuccin-icons.hidesExplorerArrows": true,
  "material-icon-theme.hidesExplorerArrows": true,
  "find-it-faster.general.useTerminalInEditor": true,
  "dotenv.enableAutocloaking": false,
  "redhat.telemetry.enabled": false,
  "liveServer.settings.port": 8080,
  "easy-codesnap.boxShadow": "rgba(0, 0, 0, 0.78) 0px 20px 68px",
  "easy-codesnap.backgroundColor": "#52158e",
  "easy-codesnap.containerPadding": "3em",
  "easy-codesnap.shutterAction": "copy",
  "easy-codesnap.target": "container",
  "easy-codesnap.roundedCorners": true,
  "easy-codesnap.showWindowTitle": false,
  "easy-codesnap.showLineNumbers": true,
  "easy-codesnap.realLineNumbers": false,
  "easy-codesnap.showWindowControls": true,
  "easy-codesnap.highlightLineNumber": true,
  "easy-codesnap.transparentBackground": true,
  "easy-codesnap.roundingLevel": 4,
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "markdownlint.config": {
    "MD033": false
  },
  "workbench.colorCustomizations": {
    "[Omni]": {
      "editorSuggestWidget.selectedBackground": "#42142d",
      "list.inactiveSelectionBackground": "#42142d",
      "list.activeSelectionBackground": "#42142d",
      "list.focusBackground": "#42142d",
      "list.hoverBackground": "#42142d",
      "list.dropBackground": "#42142d",
      "menu.selectionBackground": "#45255f"
    }
  },
  "vscode_custom_css.imports": [
    // Alter these paths to your files
    "file:///home/kaio/.config/Code/User/custom/style.css",
    "file:///home/kaio/.config/Code/User/custom/script.js",
    // This path below was created automatically by the VSCode Animations Extension,
    // remove this path and if you want animations, install the extension and it will
    // create the right path automatically
    "file:///home/kaio/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.4/dist/updateHandler.js"
  ],
  "animations.Command-Palette": "Fade",
  "animations.Scrolling": "Slide",
  //|==========================================================================|
  //| Neovim                                                                   |
  //|==========================================================================|
  // - Update the path to your Neovim executable as per your system.
  // - Adjust the OS-specific settings. This config is for Linux; Windows or Mac users
  //   need to modify the configuration accordingly.
  // - For Windows WSL users, set the config below to true and specify the Linux path
  //   (use the Linux version of Neovim, not the Windows version).
  //
  // "vscode-neovim.useWSL": true, // Enable WSL for Windows
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim", // Linux path
  // "vscode-neovim.neovimExecutablePaths.win32": "", // Windows path
  // "vscode-neovim.neovimExecutablePaths.darwin": "", // MacOS path
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  /* "vscode-neovim.compositeKeys": {
    "jj": {
      "command": "vscode-neovim.escape",
    },
    "jk": {
      // Use lua to execute any logic
      "command": "vscode-neovim.lua",
      "args": [
        [
          "local code = require('vscode')",
          "code.action('vscode-neovim.escape')",
          "code.action('workbench.action.files.save')",
        ],
      ],
    },
    "kj": {
      // Use lua to execute any logic
      "command": "vscode-neovim.lua",
      "args": [
        [
          "local code = require('vscode')",
          "code.action('vscode-neovim.escape')",
          "code.action('workbench.action.files.save')",
        ],
      ],
    },
   } */
}
